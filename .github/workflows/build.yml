name: Build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 1
      #     submodules: recursive

      - name: Install Pre-requisites
        run: |
          set -e
          sudo apt-get install -y \
            build-essential \
            wget \
            make \
            python3 \
            gcc-arm-none-eabi
          # sudo add-apt-repository ppa:deadsnakes/ppa
          # sudo apt-get update -y
          # sudo apt-get install -y \
          #   build-essential \
          #   wget \
          #   make=4.3-4.1build2 \
          #   python3.11 \
          #   gcc-arm-none-eabi=15:10.3-2021.07-4
          # sudo pip install intelhex
          # sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
          # sudo update-alternatives --set python3 /usr/bin/python3.11

      - name: Verify Pre-requisites
        run: |
          set -e
          echo "make: $(make --version | head -n 1)"
          echo "gcc-arm-none-eabi: $(arm-none-eabi-gcc --version | head -n 1)"
          echo "python: $(python3 --version)"

      # - name: Setup Nordic SDK
      #   env:
      #     library_sdk_path: "libraries/SDK"
      #     nordic_sdk_path: "nRF5_SDK_17.1.0_ddde560"
      #     nordic_sdk_zip: "${nordic_sdk_path}.zip"
      #     nordic_sdk_url: "https://nsscprodmedia.blob.core.windows.net/prod/software-and-other-downloads/sdks/nrf5/binaries/nrf5_sdk_17.1.0_ddde560.zip"
      #   run: |
      #     mkdir -p ${library_sdk_path}
      #     cd ${library_sdk_path}
      #     wget -O ${nordic_sdk_zip} ${nordic_sdk_url}
      #     unzip ${nordic_sdk_zip}
      #     rm ${nordic_sdk_zip}

      # - name: Build
      #   run: |
      #     cd build
      #     make release
